name: deploy

on:
  workflow_dispatch: {}

concurrency:
  group: deploy
  cancel-in-progress: false

jobs:
  index-docker-image:
    name: Build index docker image
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2 # Action page: <https://github.com/docker/login-action>
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - {uses: gacts/github-slug@v1, id: slug} # Action page: <https://github.com/gacts/github-slug>

      - uses: docker/build-push-action@v3 # TODO do not build the image if it already exists
        with:
          context: index
          file: index/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-index:${{ steps.slug.outputs.commit-hash-short }}

  deploy:
    name: Deploy to production
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    concurrency: production
    needs: [index-docker-image]
    environment:
      name: production
    steps:
      - uses: actions/checkout@v3

      - {uses: gacts/github-slug@v1, id: slug} # Action page: <https://github.com/gacts/github-slug>

      - uses: gacts/fetch-doppler-secret@v1
        id: deploy-token
        with:
          token: ${{ secrets.DOPPLER_NOMAD_PROJECT_TOKEN }}
          project: nomad
          secret-name: ACL_DEPLOY_TOKEN

      - uses: gacts/fetch-doppler-secret@v1
        id: tg-proxy-secret
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: TG_PROXY_SECRET

      - uses: gacts/fetch-doppler-secret@v1
        id: tg-proxy-subdomain
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: TG_PROXY_SUBDOMAIN

      - uses: gacts/fetch-doppler-secret@v1
        id: web-proxy-login
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: WEB_PROXY_LOGIN

      - uses: gacts/fetch-doppler-secret@v1
        id: web-proxy-password
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: WEB_PROXY_PASSWORD

      - uses: gacts/fetch-doppler-secret@v1
        id: web-proxy-dns-1
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: WEB_PROXY_DNS_RESOLVER_1

      - uses: gacts/fetch-doppler-secret@v1
        id: web-proxy-dns-2
        with:
          token: ${{ secrets.DOPPLER_PROXY_SERVICE_PROJECT_TOKEN }}
          project: proxy-service
          secret-name: WEB_PROXY_DNS_RESOLVER_2

      - uses: gacts/fetch-doppler-secret@v1
        id: ghcr-login
        with:
          token: ${{ secrets.DOPPLER_GITHUB_PROJECT_TOKEN }}
          project: github
          secret-name: GHCR_LOGIN

      - uses: gacts/fetch-doppler-secret@v1
        id: ghcr-token
        with:
          token: ${{ secrets.DOPPLER_GITHUB_PROJECT_TOKEN }}
          project: github
          secret-name: GHCR_TOKEN

      - uses: gacts/install-nomad@v1

      - run: |
          nomad run \
            -var="tg_secret=${{ steps.tg-proxy-secret.outputs.secret }}" \
            -var="tg_subdomain=${{ steps.tg-proxy-subdomain.outputs.secret }}" \
            -var="web_proxy_login=${{ steps.web-proxy-login.outputs.secret }}" \
            -var="web_proxy_password=${{ steps.web-proxy-password.outputs.secret }}" \
            -var="web_proxy_primary_dns=${{ steps.web-proxy-dns-1.outputs.secret }}" \
            -var="web_proxy_secondary_dns=${{ steps.web-proxy-dns-2.outputs.secret }}" \
            -var="docker_login=${{ steps.ghcr-login.outputs.secret }}" \
            -var="docker_password=${{ steps.ghcr-token.outputs.secret }}" \
            -var="index_page_image=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-index:${{ steps.slug.outputs.commit-hash-short }}" \
              ./deploy/service.hcl
        env: {NOMAD_ADDR: 'https://nomad.iddqd.uk/', NOMAD_TOKEN: '${{ steps.deploy-token.outputs.secret }}'}
